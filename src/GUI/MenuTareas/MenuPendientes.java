/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI.MenuTareas;

import GUI.MenuProductos.*;
import Classes.Product.Producto;
import Funcionalidades.GestorProductos;
import java.awt.BorderLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import Funcionalidades.GestorComprasQuaHeap;
import Funcionalidades.*;
import Classes.Pendientes;
import Structures.*;
import java.util.List;
/**
 *
 * @author CristianM
 */
public class MenuPendientes extends javax.swing.JPanel {
    public static GestorProductos gestorProductos = new GestorProductos();
    /**
     * Creates new form productosCRUD
     */
    public GestorComprasQuaHeap listaQ= new GestorComprasQuaHeap();
    public GestorPendientes gestorPendiente=new GestorPendientes();
    public MenuPendientes() {
        initComponents();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cont = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        tDescripcion = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        tPrecio = new javax.swing.JTextField();
        bAgregarPendiente = new javax.swing.JButton();
        bEliminarPendiente = new javax.swing.JButton();
        bMostrar = new javax.swing.JButton();
        bLimpiar = new javax.swing.JButton();
        scroll = new javax.swing.JScrollPane();
        texto = new javax.swing.JTextArea();
        bCompletarPendiente = new javax.swing.JButton();
        bBuscar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        jLabel2.setText("Descripci√≥n");

        tDescripcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tDescripcionActionPerformed(evt);
            }
        });

        jLabel3.setText("Prioridad");

        bAgregarPendiente.setText("Agregar Pendiente");
        bAgregarPendiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAgregarPendienteActionPerformed(evt);
            }
        });

        bEliminarPendiente.setText("Eliminar pendiente");
        bEliminarPendiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEliminarPendienteActionPerformed(evt);
            }
        });

        bMostrar.setText("Mostrar todos los pendientes");
        bMostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bMostrarActionPerformed(evt);
            }
        });

        bLimpiar.setText("Limpiar Campos");
        bLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bLimpiarActionPerformed(evt);
            }
        });

        texto.setColumns(20);
        texto.setRows(5);
        scroll.setViewportView(texto);

        bCompletarPendiente.setText("Completar pendiente");
        bCompletarPendiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCompletarPendienteActionPerformed(evt);
            }
        });

        bBuscar.setText("Buscar pendiente");
        bBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bBuscarActionPerformed(evt);
            }
        });

        jLabel1.setText("Gestor de pendientes");

        javax.swing.GroupLayout contLayout = new javax.swing.GroupLayout(cont);
        cont.setLayout(contLayout);
        contLayout.setHorizontalGroup(
            contLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(contLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(contLayout.createSequentialGroup()
                        .addGroup(contLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(contLayout.createSequentialGroup()
                                .addComponent(tPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bLimpiar))
                            .addComponent(jLabel3))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(contLayout.createSequentialGroup()
                        .addGroup(contLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 441, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(tDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(contLayout.createSequentialGroup()
                                .addComponent(scroll, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(87, 87, 87)
                                .addGroup(contLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(contLayout.createSequentialGroup()
                                        .addGroup(contLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(bEliminarPendiente)
                                            .addComponent(bAgregarPendiente))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(contLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(bBuscar)
                                            .addComponent(bCompletarPendiente)))
                                    .addComponent(bMostrar))))
                        .addGap(0, 116, Short.MAX_VALUE))))
        );
        contLayout.setVerticalGroup(
            contLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(contLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bLimpiar)
                    .addComponent(tPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(contLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(contLayout.createSequentialGroup()
                        .addGroup(contLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(contLayout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addGroup(contLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(bEliminarPendiente)
                                    .addComponent(bBuscar)))
                            .addGroup(contLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(bAgregarPendiente)
                                .addComponent(bCompletarPendiente)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bMostrar))
                    .addComponent(scroll, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(51, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cont, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cont, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getAccessibleContext().setAccessibleName("");
        getAccessibleContext().setAccessibleDescription("");
    }// </editor-fold>//GEN-END:initComponents

    private void bLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bLimpiarActionPerformed

        tDescripcion.setText("");
        tPrecio.setText("");
        texto.setText("");
    }//GEN-LAST:event_bLimpiarActionPerformed

    private void bMostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bMostrarActionPerformed

            List<Pendientes> a=gestorPendiente.buscarPorPrioridad(0);
            StringBuilder sb = new StringBuilder();
            for (int i=0;i<a.size();i++){
                if(a.get(i) != null){
                    sb.append("Descripci√≥n: ").append(a.get(i).getDescription()).append("\n");
                    sb.append("Prioridad: ").append(Integer.toString(a.get(i).getPriority())).append("\n");
                    sb.append("\n");
                }
            }
        String resultado = sb.toString().trim();
        texto.setText(resultado);
    }//GEN-LAST:event_bMostrarActionPerformed

    private void bEliminarPendienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEliminarPendienteActionPerformed
        List<Pendientes> a=gestorPendiente.buscarPorPrioridadExacta(Integer.parseInt(tPrecio.getText()));
        if (tDescripcion.getText().equals("")){
            for (int i=0;i<a.size();i++){
                gestorPendiente.eliminarPendiente(Integer.parseInt(tPrecio.getText()), a.get(i).getDescription());
            }
            JOptionPane.showMessageDialog(this, "Los pendientes con la prioridad "+ tPrecio.getText()+" han sido eliminados");
        }else{
            for (int i=0;i<a.size();i++){
                if(a.get(i) != null&&a.get(i).getDescription().equals(tDescripcion.getText())){
                    gestorPendiente.eliminarPendiente(Integer.parseInt(tPrecio.getText()), a.get(i).getDescription());
                    
                }
            }
            JOptionPane.showMessageDialog(this, "Los pendientes con la prioridad "+ tPrecio.getText()+" y la descripci√≥n "+ tDescripcion.getText()+" han sido eliminados");
        }
    }//GEN-LAST:event_bEliminarPendienteActionPerformed

    private void bAgregarPendienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAgregarPendienteActionPerformed
        gestorPendiente.agregarPendiente(Integer.parseInt(tPrecio.getText()), tDescripcion.getText());
        JOptionPane.showMessageDialog(this, "Pendiente agregado exitosamente!");
    }//GEN-LAST:event_bAgregarPendienteActionPerformed

    private void tDescripcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tDescripcionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tDescripcionActionPerformed

    private void bCompletarPendienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCompletarPendienteActionPerformed
        Pendientes o=new Pendientes();
        List<Pendientes> a=gestorPendiente.buscarPorPrioridadExacta(Integer.parseInt(tPrecio.getText()));
        for (int i=0;i<a.size();i++){
            if (a.get(i)==null){
                break;
            }
            if (a.get(i).getDescription().equals(tDescripcion.getText())){
              o=a.get(i);
              gestorPendiente.marcarCompletada(o);
              System.out.println(o.isCompletada());
              JOptionPane.showMessageDialog(this, "Pendiente completado!");
            }
            }
         if (o.getDescription()==null){
            JOptionPane.showMessageDialog(this, "Pendiente no encontrado!");
            }
    }//GEN-LAST:event_bCompletarPendienteActionPerformed

    private void bBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bBuscarActionPerformed
        if (tDescripcion.getText().equals("")){
            List<Pendientes> a=gestorPendiente.buscarPorPrioridadExacta(Integer.parseInt(tPrecio.getText()));
            StringBuilder sb = new StringBuilder();
            for (int i=0;i<a.size();i++){
                if(a.get(i) != null){
                    sb.append("Descripci√≥n: ").append(a.get(i).getDescription()).append("\n");
                    sb.append("Prioridad: ").append(Integer.toString(a.get(i).getPriority())).append("\n");
                    sb.append("\n");
                }
            }
        String resultado = sb.toString().trim();
        texto.setText(resultado);
        }else{
            List<Pendientes> a=gestorPendiente.buscarPorPrioridadExacta(Integer.parseInt(tPrecio.getText()));
            
            StringBuilder sb = new StringBuilder();
            for (int i=0;i<a.size();i++){
                if(a.get(i) != null&&a.get(i).getDescription().equals(tDescripcion.getText())){
                    sb.append("Descripci√≥n: ").append(a.get(i).getDescription()).append("\n");
                    sb.append("Prioridad: ").append(Integer.toString(a.get(i).getPriority())).append("\n");
                    sb.append("\n");
                }
            }
        String resultado = sb.toString().trim();
        texto.setText(resultado);
        }
    }//GEN-LAST:event_bBuscarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAgregarPendiente;
    private javax.swing.JButton bBuscar;
    private javax.swing.JButton bCompletarPendiente;
    private javax.swing.JButton bEliminarPendiente;
    private javax.swing.JButton bLimpiar;
    private javax.swing.JButton bMostrar;
    private javax.swing.JPanel cont;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane scroll;
    private javax.swing.JTextField tDescripcion;
    private javax.swing.JTextField tPrecio;
    private javax.swing.JTextArea texto;
    // End of variables declaration//GEN-END:variables
}
